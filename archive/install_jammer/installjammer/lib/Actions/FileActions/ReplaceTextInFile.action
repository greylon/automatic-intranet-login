## $Id$
##
## BEGIN LICENSE BLOCK
##
## Copyright (C) 2002  Damon Courtney
## 
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## version 2 as published by the Free Software Foundation.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License version 2 for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the
##     Free Software Foundation, Inc.
##     51 Franklin Street, Fifth Floor
##     Boston, MA  02110-1301, USA.
##
## END LICENSE BLOCK

Action ReplaceTextInFile

Property Encoding short "Encoding"
Help Encoding "Specifies an encoding to use when writing data to the file"

Property Files short "Files"
Help Files "A list of file patterns separated by \; (example: */*.txt\;*/*.sh)"

Property StringMap stringmap "String Map"
Help StringMap "A map of text translations to make in the target file"

Property LineFeed choice "Line Feed" "Auto" {Auto Unix Windows}
Help LineFeed "The end-of-line character to use when outputting lines"

proc ::InstallJammer::actions::ReplaceTextInFile { obj } {
    $obj properties props

    set translation auto
    if {$props(LineFeed) eq "Unix"} {
        set translation lf
    } elseif {$props(LineFeed) eq "Windows"} {
        set translation crlf
    }

    set map [::InstallJammer::SubstForPipe $props(StringMap)]

    foreach file [::InstallJammer::GetFilesForPattern $props(Files) -type f] {
        set contents [read_file $file]

        set fp [open $file w]
        fconfigure $fp -translation $translation
        if {$props(Encoding) ne ""} {
            fconfigure $fp -encoding $props(Encoding)
        }
        puts -nonewline $fp [string map $map $contents]
        close $fp
    }
}
